<?xml version="1.0" encoding="UTF-8"?>
<!-- author:Administrator -->
<sqlMap>
    <parameterMap class="commonj.sdo.DataObject" id="parameterMap">
        <parameter javaType="date" jdbcType="DATE" property="dateType"/>
    </parameterMap>
    <resultMap class="commonj.sdo.DataObject" id="resultMap">
        <result column="TYPEID" javaType="string" property="typeId"/>
    </resultMap>
    
    <!-- 根据单号，供应商，订货日期，创建日期，审核日期，配件编码，配件名称，配件ID，创建人，公司ID orgid -->
    <select id="queryPjPchsPlanMainList" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">

            SELECT DISTINCT
				a.id as id,
				a.service_id as serviceId,
				a.orgid as orgid,
				a.guest_id as guestId,
				a.store_id as storeId,
				a.order_date as orderDate,
				a.status as status,
				a.is_finished as isFinished,
				a.finish_date as finishDate,
				a.audit_sign as auditSign,
				a.auditor_id as auditorId,
				a.auditor as auditor,
				a.audit_date as auditDate,
				a.remark as remark,
				a.version_no as versionNo,
				a.is_disabled as isDisabled,
				a.creator_id as creatorId,
				a.creator as creator,
				a.create_date as createDate,
				a.operator_id as operatorId,
				a.operator as operator,
				a.operate_date as operateDate,
				B.FULL_NAME AS guestFullName,
				B.SHORT_NAME AS guestShortName
			FROM
				DMS_CLOUD_PART.pj_pchs_plan_main A
				INNER JOIN WB_COMMON.COM_GUEST B ON A.GUEST_ID = B.ID
				LEFT JOIN DMS_CLOUD_PART.pj_pchs_plan_detail C ON A.ID = C.MAIN_ID
				LEFT JOIN WB_COMMON.COM_ATTRIBUTE D ON C.PART_ID = D.ID
            where 1=1
            <dynamic>
            	<isNotEmpty prepend="and" property="orgid"> 
                    (a.orgid = #orgid#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="id"> 
                    (a.id = #id#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="isDisabled"> 
                    (a.is_disabled = #isDisabled#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="isFinished"> 
                    (a.is_finished = #isFinished#)
                </isNotEmpty>

                <!--订货日期 -->
                <isNotEmpty prepend="and" property="sOrderDate">  
                    A.ORDER_DATE &gt;= #sOrderDate#
                </isNotEmpty>
                <isNotEmpty prepend="and" property="eOrderDate">  
                    (A.ORDER_DATE &lt; #eOrderDate#)
                </isNotEmpty>
                <!--创建日期 -->
                <isNotEmpty prepend="and" property="sCreateDate">  
                    (A.CREATE_DATE &gt;= #sCreateDate#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="eCreateDate">  
                    (A.CREATE_DATE &lt; #eCreateDate#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="serviceId">  
                    (a.service_id like '%$serviceId$%')
                </isNotEmpty>
                <!--审核日期 -->
                <isNotEmpty prepend="and" property="sAuditDate">  
                    (A.AUDIT_DATE &gt;= #sAuditDate#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="eAuditDate">  
                    (A.AUDIT_DATE &lt; #eAuditDate#)
                </isNotEmpty>
                <!--本日 昨日 本周 上周 本月 下月 -->
                <isNotEmpty prepend="and" property="startDate">  
                    (A.CREATE_DATE &gt;= #startDate#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="endDate">  
                    (A.CREATE_DATE &lt; #endDate#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="partId">  
                    (C.PART_ID = #partId#)
                </isNotEmpty>
                 <isNotEmpty prepend="and" property="partCode">  
                    (D.CODE like '%$partCode$%')
                </isNotEmpty>
                <isNotEmpty prepend="and" property="guestId">  
                    (A.guest_id = #guestId#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="partName">  
                    (D.FULL_NAME like '%$partName$%')
                </isNotEmpty>
                <isNotEmpty prepend="and" property="status">  
                <!--审核状态-->
                    (A.status = #status#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="auditSign">  
                <!--审核状态-->
                    (A.AUDIT_SIGN = #auditSign#)
                </isNotEmpty>
                <isNotEmpty prepend="and" property="serviceIdList">  
                    (A.service_id in ($serviceIdList$))
                </isNotEmpty>
                <isNotEmpty prepend="and" property="partCodeList">  
                    (D.CODE in ($partCodeList$))
                </isNotEmpty> 
                 <isNotEmpty prepend="and" property="creator">  
                    (a.creator = #creator#)
                </isNotEmpty>
            </dynamic>  
            
    	
        
        ORDER BY A.operate_date DESC
    </select>
    
    <!-- 根据主表ID查询 -->
    <select id="queryPjPchsPlanDetailList" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
    	
         SELECT 
			a.id as id,
			a.main_id as mainId,
			a.part_id as partId,
			a.part_code as partCode,
			a.part_name as partName,
			a.full_name as fullName,
			a.enter_unit_id as enterUnitId,
			a.system_unit_id as systemUnitId,
			a.total_stock_qty as totalStockQty,
			a.master_stock_qty as masterStockQty,
			a.branch_stock_qty as branchStockQty,
			a.on_way_qty as onWayQty,
			a.up_limit as upLimit,
			a.down_limit as downLimit,
			a.up_limit_winter as upLimitWinter,
			a.down_limit_winter as downLimitWinter,
			a.order_qty as orderQty,
			a.order_price as orderPrice,
			a.order_amt as orderAmt,
			a.is_finished as isFinished,
			a.finish_date as finishDate,
			a.last_enter_date as lastEnterDate,
			a.last_out_date as lastOutDate,
			a.remark as remark,
			B.`code` AS comPartCode,
			B.`name` AS comPartName,
			B.full_name AS comFullName,
			B.brand_code AS comBrandCode,
			B.oem_code AS comOemCode,
			B.quality_type_id AS comQualityTypeId,
			B.part_brand_id AS comPartBrandId,
			B.apply_car_model AS comApplyCarModel,
			B.unit AS comUnit,
			B.spec AS comSpec,
			B.direction AS comDirection
		FROM
			DMS_CLOUD_PART.pj_pchs_plan_detail A
			INNER JOIN WB_COMMON.COM_ATTRIBUTE B ON A.PART_ID = B.ID
			where 1=1 and (A.MAIN_ID = #mainId#)
            
        ORDER BY a.id asc
    </select>
    
    
    <!-- 一键获取计划采购配件， 品牌，销量排名前多少，按销售日期查询（默认最近3个月），不考虑退货 -->
    <select id="getPchsPlanPart" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
    	
        SELECT a.part_id as partId, d.code, d.name, d.full_name as fullName, d.unit
		from pj_out_detail_chk a
		inner join pj_out_main_chk b
		on a.main_id = b.id
		INNER JOIN wb_common.com_company c
		on b.orgid = c.orgid
		inner join wb_common.com_attribute d
		on a.part_id = d.id
		where 1 = 1
		
		<dynamic>
        	<isNotEmpty prepend="and" property="tenantId"> 
                (c.tenant_id = #tenantId#)
            </isNotEmpty>
        	<isNotEmpty prepend="and" property="orgid"> 
                (c.orgid = #orgid#)
            </isNotEmpty>
        	<isNotEmpty prepend="and" property="partBrandId"> 
                (d.part_brand_id = #partBrandId#)
            </isNotEmpty>
            <!--审核日期 -->
            <isNotEmpty prepend="and" property="sAuditDate">  
                (b.AUDIT_DATE &gt;= #sAuditDate#)
            </isNotEmpty>
            <isNotEmpty prepend="and" property="eAuditDate">  
                (b.AUDIT_DATE &lt; #eAuditDate#)
            </isNotEmpty>
        </dynamic>
		
		group by a.part_id, d.code, d.name, d.full_name, d.unit
		order by sum(a.sell_qty) desc
		<isNotEmpty prepend="limit" property="limitCount">  
            $limitCount$
        </isNotEmpty> 
         
         
    </select>
    
    <!-- 更新计划采购的连锁库存   可能会有一些仓库不参与计算，后续再处理 -->
    <update id="updatePchsPlanTotalStockQty" parameterClass="java.util.HashMap" >
		update pj_pchs_plan_detail m
		inner join (
			SELECT a.part_id, sum(a.stock_qty) as totalStockQty
			from pj_part_store_stock a
			inner join wb_common.com_company b
			on a.orgid = b.orgid
			where b.tenant_id = #tenantId#
			group by a.part_id) n
		on m.part_id = n.part_id
		set m.total_stock_qty = n.totalStockQty
		where m.main_id = #mainId#
	</update>
	
	<!-- 
	            更新计划采购的总部库存，更新库存上下限   
	            可能会有一些仓库不参与计算，后续再处理  
	            目前计划采购不考虑按仓库来开单，所以要汇总所有仓库的上限，下限
	            目前只考虑总部做计划采购，所以直接按is_master = 1上限，下限来取值
	-->
    <update id="updatePchsPlanMasterStockQty" parameterClass="java.util.HashMap" >
		update pj_pchs_plan_detail m
		inner join (
			SELECT a.part_id, sum(a.stock_qty) as totalStockQty,
			       sum(a.up_limit) as upLimit,
			       sum(a.down_limit) as downLimit,
			       sum(a.up_limit_winter) as upLimitWinter,
			       sum(a.down_limit_winter) as downLimitWinter
			from pj_part_store_stock a
			inner join wb_common.com_company b
			on a.orgid = b.orgid
			where b.tenant_id = #tenantId# and b.is_master = 1
			group by a.part_id) n
		on m.part_id = n.part_id
		set m.master_stock_qty = n.totalStockQty,
		    m.up_limit = n.upLimit,
		    m.down_limit = n.downLimit,
		    m.up_limit_winter = n.upLimitWinter,
		    m.down_limit_winter = n.downLimitWinter
		where m.main_id = #mainId#
	</update>
	
	<!-- 更新计划采购的分店总库存   可能会有一些仓库不参与计算，后续再处理  -->
    <update id="updatePchsPlanBranchStockQty" parameterClass="java.util.HashMap" >
		update pj_pchs_plan_detail m
		inner join (
			SELECT a.part_id, sum(a.stock_qty) as totalStockQty
			from pj_part_store_stock a
			inner join wb_common.com_company b
			on a.orgid = b.orgid
			where b.tenant_id = #tenantId# and b.is_master = 0
			group by a.part_id) n
		on m.part_id = n.part_id
		set m.branch_stock_qty = n.totalStockQty
		where m.main_id = #mainId#
	</update>
	
	<!-- 更新计划采购的在途数量   可能会有一些仓库不参与计算，后续再处理  -->
    <update id="updatePchsPlanOnWayQty" parameterClass="java.util.HashMap" >
		update pj_pchs_plan_detail m
		inner join (
			SELECT a.part_id, (a.order_qty - a.adjust_qty - a.true_enter_qty) as onWayQty
			from pj_pchs_order_detail_chk a
			inner join pj_pchs_order_main_chk b
			on a.main_id = b.id
			where b.orgid = #orgid# and b.is_finished = 0
			group by a.part_id) n
		on m.part_id = n.part_id
		set m.on_way_qty = n.onWayQty
		where m.main_id = #mainId#
	</update>
	
	<!-- 更新计划采购的建议采购单价  -->
    <update id="updatePchsPlanPrice" parameterClass="java.util.HashMap" >
		update pj_pchs_plan_detail m
		inner join pj_part_stock n
		on m.part_id = n.part_id
		set m.order_price = n.last_enter_price,
		    m.order_amt = m.order_qty * n.last_enter_price
		where m.main_id = #mainId# and n.orgid = #orgid#
	</update>

</sqlMap>