<?xml version="1.0" encoding="UTF-8"?>
<!-- author:Administrator -->
<sqlMap>
    <parameterMap class="commonj.sdo.DataObject" id="parameterMap">
        <parameter javaType="date" jdbcType="DATE" property="dateType"/>
    </parameterMap>
    <resultMap class="commonj.sdo.DataObject" id="resultMap">
        <result column="TYPEID" javaType="string" property="typeId"/>
    </resultMap>
    
    <!--下次保养-->
	<select id="getNextCare" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.last_orgid as orgid, b.guest_id as guestId, a.car_id as carId, b.car_no as carNo, b.vin as carVin, 
			   a.mt_advisor_id as mtAdvisorId, a.mt_advisor_name as mtAdvisorName, DATE_FORMAT(a.care_due_date,'%Y-%m-%d') as dueDate 
		from rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		where TIMESTAMPDIFF(DAY, a.care_due_date, NOW()) = #ln#
		      and a.last_orgid = #orgid# and a.is_need_remind = 0
	</select>
	<!--下次保养-->
	<update id="updateNextCare" parameterClass="java.util.HashMap">
		update rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		set a.is_need_remind = 1, a.remind_status = 0
		where TIMESTAMPDIFF(DAY, a.care_due_date, NOW()) = #ln#
		      and a.last_orgid = #orgid# and a.is_need_remind = 0
	</update>
	
	<!--保养周期-->
	<select id="getCareCircle" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	</select>
	
	<!--年审到期-->
	<select id="getAnnualVerification" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.last_orgid as orgid, b.guest_id as guestId, a.car_id as carId, b.car_no as carNo, b.vin as carVin, 
		       b.mt_advisor_id as mtAdvisorId, b.mt_advisor_name as mtAdvisorName, DATE_FORMAT(b.annual_verification_due_date,'%Y-%m-%d') as dueDate
		from rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		where TIMESTAMPDIFF(DAY, b.annual_verification_due_date, NOW()) = #ln#
	</select>
	
	<!--商业险到期-->
	<select id="getAnnualInspection" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.last_orgid as orgid, b.guest_id as guestId, a.car_id as carId, b.car_no as carNo, b.vin as carVin, 
		       b.mt_advisor_id as mtAdvisorId, b.mt_advisor_name as mtAdvisorName, DATE_FORMAT(b.annual_inspection_date,'%Y-%m-%d') as dueDate
		from rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		where TIMESTAMPDIFF(DAY, b.annual_inspection_date, NOW()) = #ln#
	</select>
	<!--商业险到期-->
	<update id="updateAnnualRemind" parameterClass="java.util.HashMap">
		update rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		set a.is_annual_remind = 1, a.annual_status = 0
		where TIMESTAMPDIFF(DAY, b.annual_inspection_date, NOW()) = #ln#
		      and a.last_orgid = #orgid# and a.is_annual_remind = 0
	</update>

	<!--交强险到期-->
	<select id="getInsureDueDate" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.last_orgid as orgid, b.guest_id as guestId, a.car_id as carId, b.car_no as carNo, b.vin as carVin, 
		       b.mt_advisor_id as mtAdvisorId, b.mt_advisor_name as mtAdvisorName, DATE_FORMAT(b.insure_due_date,'%Y-%m-%d') as dueDate
		from rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		where TIMESTAMPDIFF(DAY, b.insure_due_date, NOW()) = #ln#
	</select>
	<!--交强险到期-->
	<update id="updateInsureRemind" parameterClass="java.util.HashMap">
		update rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		set a.is_insure_remind = 1, a.insure_status = 0
		where TIMESTAMPDIFF(DAY, b.insure_due_date, NOW()) = #ln#
		      and a.last_orgid = #orgid# and a.is_insure_remind = 0
	</update>
	
	<!--年检到期-->
	<select id="getRpsItemCardTimesAmt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	</select>
	<!--年检到期-->
	<update id="updateVerRemind" parameterClass="java.util.HashMap">
		update rpb_car_extend a
		inner join rpb_car b
		on a.car_id = b.id
		set a.is_veri_remind = 1, a.veri_status = 0
		where TIMESTAMPDIFF(DAY, b.annual_verification_due_date, NOW()) = #ln#
					and a.last_orgid = #orgid# and a.is_veri_remind = 0
	</update>
	
	<!--客户生日  按月日提醒-->
	<select id="getGuestBirthday" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT last_orgid as orgid, id as guestId, full_name as fullName, DATE_FORMAT(birthday,'%m-%d') as dueDate,
			   mt_advisor_id as mtAdvisorId, mt_advisor_name as mtAdvisorName
		from rpb_guest
		where datediff(DATE_ADD(birthday,INTERVAL ceil(TIMESTAMPDIFF(MONTH,birthday,NOW())/12) YEAR),NOW()) = #ln# 
	</select>
	<!--客户生日  按月日提醒-->
	<update id="updateGuestBirthdayRemind" parameterClass="java.util.HashMap">
		update rpb_contactor set is_bir_remind = 1, bir_status = 0
		where datediff(DATE_ADD(birthday,INTERVAL ceil(TIMESTAMPDIFF(MONTH,birthday,NOW())/12) YEAR),NOW()) = #ln#
					and orgid = #orgid# and is_bir_remind = 0
	</update>
	
	<!--驾照到期-->
	<update id="updateGuestLicenseRemind" parameterClass="java.util.HashMap">
		update rpb_contactor set is_license_remind = 1, license_status = 0
		where TIMESTAMPDIFF(DAY, license_over_date, NOW()) = #ln#
					and orgid = #orgid# and is_license_remind = 0
	</update>
	
	<!--订单到货提醒-->
	<select id="getPchsEnter" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT a.id, a.service_id as serviceId, a.guest_id as guestId, b.short_name as shortName,
		       a.orgid, a.plan_arrive_date as dueDate, a.order_man_id as orderManId,
		       a.order_man as orderMan, a.auditor_id as auditorId, a.auditor, a.audit_date as auditDate
		from pj_pchs_order_main_chk a 
		inner join wb_common.com_guest b
		on a.guest_id = b.id
		where is_finished = 0 
		and TIMESTAMPDIFF(HOUR, plan_arrive_date, NOW()) = #ln# 
	</select>
	
	<!--员工生日  按月日提醒-->
	<select id="getMemBirthday" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT empid, orgid, name, sex, DATE_FORMAT(birthday,'%m-%d') as dueDate,
		from wb_common.com_member
		where datediff(DATE_ADD(birthday,INTERVAL ceil(TIMESTAMPDIFF(MONTH,birthday,NOW())/12) YEAR),NOW()) = #ln# 
		      and orgid = #orgid#
	</select>
	
	
	<!--更新套餐使用次数-->
	<update id="updatePackageUseTimes" parameterClass="java.util.HashMap">
		update rpb_package a
		inner join (
		SELECT package_id, count(1) as ct
		from rps_package 
		where record_date &gt; DATE_FORMAT(NOW(),'%Y-%m-%d 00:00:00')
		group by package_id) b
		on a.id = b.package_id
		set a.use_times = ifnull(a.use_times,0) + b.ct
	</update>
	
	<!--更新项目使用次数-->
	<update id="updateItemUseTimes" parameterClass="java.util.HashMap">
		update rpb_item a
		inner join (
		SELECT item_id, count(1) as ct
		from rps_item
		where ifnull(bill_package_id,0) = 0 
		      and record_date &gt; DATE_FORMAT(NOW(),'%Y-%m-%d 00:00:00')
		group by item_id) b
		on a.id = b.item_id
		set a.use_times = ifnull(a.use_times,0) + b.ct
		where ifnull(a.is_cal_times,0) = 0
	</update>
	
	<!--更新配件使用次数-->
	<update id="updatePartUseTimes" parameterClass="java.util.HashMap">
		update rpb_part a
		inner join (
		SELECT m.part_id, n.orgid, count(1) as ct
		from rps_part m
    	inner join rps_maintain n
		on m.service_id = n.id
		where ifnull(m.bill_package_id,0) = 0 
		      and m.record_date &gt; DATE_FORMAT(NOW(),'%Y-%m-%d 00:00:00')
		group by m.part_id, n.orgid) b
		on a.part_id = b.part_id and a.orgid = b.orgid
		set a.use_times = ifnull(a.use_times,0) + b.ct
		where ifnull(a.is_cal_times,0) = 0 
	</update>

	<!--回访-->
	<select id="getVisitMaintainList" parameterClass="java.util.HashMap" resultClass="commonj.sdo.DataObject">
		select 
			a.orgid,
			a.service_type_id serviceTypeId,
			a.bill_type_id billTypeId,
			a.id,
			a.service_code serviceCode,
			a.guest_id guestId,
			a.contactor_id contactorId,
			a.car_id carId,
			a.car_no carNo,
			a.car_vin carVin,
			a.mt_advisor_id mtAdvisorId,
			a.mt_advisor mtAdvisor,
			a.out_date outDate
		from wb_repair.rps_maintain  a
		where TIMESTAMPDIFF(DAY,  a.out_date, NOW()) = #day# 
		and orgid=#orgid# 
		and a.bill_type_id = #billTypeId#
	</select>


</sqlMap>