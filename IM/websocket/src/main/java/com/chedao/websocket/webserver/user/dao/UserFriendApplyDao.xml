<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chedao.websocket.webserver.user.dao.UserFriendApplyDao">

    <resultMap type="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity" id="userFriendApplyEntity">
        <result property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="remark" column="remark"/>
        <result property="from" column="from_id"/>
        <result property="from_group" column="from_group_id"/>
        <result property="applyDate" column="apply_date"/>
        <result property="status" column="status"/>
        <association property="user" select="com.chedao.websocket.webserver.user.dao.UserInfoDao.queryByUid"
                     column="from_id">
        </association>
    </resultMap>

    <resultMap type="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity" id="uEntity">
        <result property="from" column="from_id"/>
        <result property="from_group" column="from_group_id"/>
        <result property="username" column="user_name"/>
        <result property="applyDate" column="apply_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>
    <sql id="Base_Column_List" >
  	  	id,
        uid,
        username,
        from_id,
        from_name,
        from_group_id,
        apply_date,
        `status`,
        update_date,
        remark
    </sql>

    <select id="queryObject" resultMap="uEntity">
        select  <include refid="Base_Column_List" />  from user_friend_apply where id = #{value}
    </select>

    <select id="queryByUid"  parameterType="long" resultMap="uEntity">
        select  <include refid="Base_Column_List" />  from user_friend_apply where uid = #{id}
    </select>

    <select id="queryList" resultMap="uEntity">
        select  <include refid="Base_Column_List" />  from user_friend_apply
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <resultMap type="com.chedao.websocket.webserver.user.model.UserMessageTEntity" id="userMessageTMap">
        <result property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="content" column="content"/>
        <result property="type" column="tp"/>
        <result property="read" column="rd"/>
        <result property="from" column="from_id"/>
        <result property="from_group" column="from_group"/>
        <association property="user" select="com.chedao.websocket.webserver.user.dao.UserInfoDao.queryBoxUserInfoByUid"
                     column="from_id">
        </association>
    </resultMap>
    <select id="queryBoxList" resultMap="userMessageTMap">
        select id, uid, from_id, apply_date, `status`, remark, '申请添加你为好友' as content,
                from_group_id as from_group, 1 as tp, 1 as rd,
        CASE
        WHEN TIMESTAMPDIFF(DAY, apply_date,NOW()) &gt; 0
        THEN CONCAT(TIMESTAMPDIFF(DAY, apply_date,NOW()),'天前')
        WHEN TIMESTAMPDIFF(HOUR, apply_date,NOW()) &gt; 0
        THEN CONCAT(TIMESTAMPDIFF(HOUR, apply_date,NOW()),'小时前')
        WHEN TIMESTAMPDIFF(MINUTE, apply_date,NOW()) &gt;= 5
        THEN CONCAT(TIMESTAMPDIFF(MINUTE, apply_date,NOW()),'分前')
        WHEN TIMESTAMPDIFF(MINUTE, apply_date,NOW()) &gt;= 0 and  TIMESTAMPDIFF(MINUTE, apply_date,NOW()) &lt; 5
        THEN '刚刚'
        end AS 'time'
        from user_friend_apply
        where 1 = 1
        <if test="senduser != null ">
            and from_id =#{senduser}
        </if>
        <if test="receiveuser != null ">
            and uid =#{receiveuser}
        </if>
        <if test="status != null ">
            and status =#{status}
        </if>
        order by id desc
    </select>

    <select id="queryTotal" resultType="int">
		select count(1) from user_friend_apply
        where 1 = 1
        <if test="uid != null">
            and uid = #{uid}
        </if>
	</select>

    <select id="getHistoryMessageList" resultType="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity" >
        SELECT
        a.id,
        a.senduser,
        b.name sendusername ,
        ifnull(b.profilephoto,'layui/images/0.jpg') avatar,
        a.content,
        a.createuser,
        a.createdate,
        a.updatedate
        FROM  user_message  a
        LEFT JOIN user_info b ON b.uid=a.senduser
        where (a.senduser =#{senduser} AND a.receiveuser =#{receiveuser} )  OR  (a.senduser =#{receiveuser} AND a.receiveuser =#{senduser}  )  ORDER BY id DESC
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="getHistoryMessageCount" resultType="int" >
		   select  count(1)
			from  user_message  a
		   where (a.senduser =#{senduser} AND a.receiveuser =#{receiveuser} )  OR  (a.senduser =#{receiveuser} AND a.receiveuser =#{senduser}  )
	</select>

    <select id="getUserFriendApplyList" resultMap="userFriendApplyEntity" >
        SELECT
        a.id,
        a.uid,
        a.from_id,
        a.from_group_id,
        a.apply_date,
        a.`status`,
        a.remark
        FROM
        user_friend_apply AS a
        where a.uid = #{uid}
    </select>

    <resultMap type="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity" id="userFriendApplyTEntity">
        <result property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="from" column="from_id"/>
        <result property="from_name" column="from_name"/>
        <result property="from_group" column="from_group_id"/>
        <result property="applyDate" column="apply_date"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>
    <select id="getUserFriendApply" resultMap="userFriendApplyTEntity" >
        SELECT
        a.id,
        a.uid,
        a.username,
        a.from_id,
        a.from_name,
        a.from_group_id,
        a.apply_date,
        a.`status`,
        a.update_date,
        a.remark
        FROM
        user_friend_apply AS a
        where a.uid = #{uid} and a.from_id= #{fromId}
        <if test="status != null">
            and a.`status` = #{status}
        </if>
    </select>

    <insert id="save" parameterType="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity" useGeneratedKeys="true" keyProperty="id">
		insert into user_info
		(
			`uid`,
			`deptid`,
			`name`,
			`nickname`,
			`sex`,
			`birthday`,
			`cardid`,
			`signature`,
			`school`,
			`education`,
			`address`,
			`phone`,
			`email`,
			`remark`,
			`profilephoto`,
			`createdate`,
			`createuser`,
			`updatedate`,
			`updateuser`
		)
		values
		(
			#{uid},
			#{deptid},
			#{name},
			#{nickname},
			#{sex},
			#{birthday},
			#{cardid},
			#{signature},
			#{school},
			#{education},
			#{address},
			#{phone},
			#{email},
			#{remark},
			#{profilephoto},
			NOW(),
			#{uid},
			NOW(),
			#{uid}
		)
	</insert>

    <update id="update" parameterType="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity">
        update user_friend_apply
        <set>
            <if test="updateDate != null">`update_date` = #{updateDate}, </if>
            <if test="status != null">`status` = #{status}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from user_friend_apply where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from user_friend_apply where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="applyFriend" parameterType="com.chedao.websocket.webserver.user.model.UserFriendApplyEntity" useGeneratedKeys="true" keyProperty="id">
		insert into user_friend_apply
		(
			`uid`,
			`username`,
			`from_id`,
			`from_name`,
			`from_group_id`,
			`apply_date`,
			`status`,
			`remark`
		)
		values
		(
			#{uid},
			#{username},
			#{from},
			#{from_name},
			#{from_group},
			NOW(),
			0,
			#{remark}
		)
	</insert>
</mapper>